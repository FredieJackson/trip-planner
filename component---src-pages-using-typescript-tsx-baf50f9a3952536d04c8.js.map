{"version":3,"sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js"],"names":["data","path","site","buildTime","href","Link","to","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","color","textDecoration","defaultProps","children","useStaticQuery","position","minHeight","siteMetadata","title","marginTop","textAlign","bottom","width","Date","getFullYear"],"mappings":"8KAuCA,UA3BwD,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACtD,gBAAC,IAAD,KACE,oEACA,qEAC2C,sCAD3C,+DAE8C,yCAF9C,wEAKA,qEAC2C,wCAD3C,oBAEM,wCAFN,gBAEsC,uCAFtC,UAIA,2DACiCA,EADjC,uBAC2D,IACxDD,EAAKE,KAAKC,UAFb,KAIA,2DACkC,IAChC,qBAAGC,KAAK,6CAAR,kCAFF,KAOA,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAT,8B,0FC/BEC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,0BACEC,MAAO,CACLC,WAAW,UACXC,aAAa,YAGf,uBACEF,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,sBAAIL,MAAO,CAAEG,OAAQ,IACnB,gBAAC,EAAAP,KAAD,CACEC,GAAG,IACHG,MAAO,CACLM,MAAM,QACNC,eAAe,SAGhBR,OAWXD,EAAOU,aAAe,CACpBT,UAAU,IAGZ,QCgCA,EA3De,SAAC,GAAkB,IAAD,EAAfU,EAAe,EAAfA,SACVlB,GAAOmB,oBAAe,cAU5B,OACE,uBAAKV,MAAO,CACVW,SAAU,WACVC,UAAW,UAEX,gBAAC,EAAD,CAAQb,WAAW,UAAAR,EAAKE,KAAKoB,oBAAV,eAAwBC,QAAxB,UACnB,uBACEd,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,4BAAOI,IAGT,0BACET,MAAO,CACLe,UAAU,OACVd,WAAW,UACXe,UAAW,SACXL,SAAU,WACVM,OAAQ,EACRC,MAAO,SAIT,uBACElB,MAAO,CACLM,MAAM,QACNC,eAAe,OACfJ,OAAO,SACPC,SAAU,IACVC,QAAQ,kBANZ,MASK,IAAIc,MAAOC,cAThB","file":"component---src-pages-using-typescript-tsx-baf50f9a3952536d04c8.js","sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\n  <Layout>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>.tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `#1e90ff`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <div style={{\n      position: 'relative',\n      minHeight: '100vh'\n    }}>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n\n      </div>\n      <footer\n        style={{\n          marginTop: `2rem`,\n          background: `#1e90ff`,\n          textAlign: \"center\",\n          position: 'absolute',\n          bottom: 0,\n          width: '100%',\n          //height: '3rem',            /* Footer height */\n        }}\n      >\n        <div\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `1.0rem 0.5rem`,\n          }}\n        >\n          Â© {new Date().getFullYear()}, built by TripPlanner team\n    </div>\n\n      </footer>\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}